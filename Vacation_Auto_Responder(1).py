# -*- coding: utf-8 -*-
"""Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import smtplib
import imaplib
import email
import time
import random

# Define the following variables:
GMAIL_USERNAME = "Your Gmail Id"
GMAIL_PASSWORD = "Your Gmail Password/app password"
VACATION_REPLY_MESSAGE = """
Hi there,

I'm currently on vacation and will be back on [date]. I'll be checking my email periodically, but I may not be able to respond immediately.

If you need immediate assistance, please contact [contact_person].

Thanks,
[Your name]
"""
VACATION_REPLY_LABEL = "vacation"

# Create a function that checks for new emails in your Gmail inbox:
def check_for_new_emails():
    # Connect to the Gmail IMAP server
    imap_client = imaplib.IMAP4_SSL('imap.gmail.com')

    # Login to your Gmail account
    imap_client.login(GMAIL_USERNAME, GMAIL_PASSWORD)

    # Select the INBOX folder
    imap_client.select('INBOX')

    # Search for unseen emails
    _, data = imap_client.search(None, 'UNSEEN')
    new_email_ids = data[0].split()

    # Close the connection to the Gmail IMAP server
    imap_client.close()

    return new_email_ids

# Create a function that replies to new emails that have no prior replies:
def reply_to_new_emails():
    # Get the list of new emails
    new_email_ids = check_for_new_emails()

    # Connect to the Gmail SMTP server
    smtp_client = smtplib.SMTP('smtp.gmail.com')
    smtp_client.starttls()
    smtp_client.login(GMAIL_USERNAME, GMAIL_PASSWORD)

    # Loop through the list of new emails
    for new_email_id in new_email_ids:
        # Fetch the email message
        _, email_data = imap_client.fetch(new_email_id, '(RFC822)')
        email_message = email.message_from_bytes(email_data[0][1])

        # Check if the email has already been replied to
        if not email_message.get('In-Reply-To') and not email_message.get('References'):
            # Reply to the email
            smtp_client.sendmail(GMAIL_USERNAME, email_message['From'], VACATION_REPLY_MESSAGE)

            # Add the email to the vacation reply label
            imap_client.add_flags(new_email_id, '\\Seen')
            imap_client.store(new_email_id, '+X-GM-LABELS', VACATION_REPLY_LABEL)

    # Close the connection to the Gmail SMTP server
    smtp_client.quit()

# Create a function that repeats the tasks in random intervals of 45 to 120 seconds:
def repeat_tasks():
    while True:
        # Sleep for a random interval of 45 to 120 seconds
        time.sleep(random.randint(45, 120))

        # Check for new emails and reply to them
        reply_to_new_emails()

# Create a main function that starts the application:
def main():
    # Connect to the Gmail IMAP server
    global imap_client
    imap_client = imaplib.IMAP4_SSL('imap.gmail.com')

    # Login to your Gmail account
    imap_client.login(GMAIL_USERNAME, GMAIL_PASSWORD)

    # Start the task loop
    repeat_tasks()

    # Close the connection to the Gmail IMAP server
    imap_client.logout()

if __name__ == '__main__':
    main()

